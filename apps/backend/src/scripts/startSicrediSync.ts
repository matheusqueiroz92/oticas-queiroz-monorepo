import { PaymentService } from '../services/PaymentService';
import { UserService } from '../services/UserService';
import { LegacyClientService } from '../services/LegacyClientService';
import { OrderService } from '../services/OrderService';
import { SicrediSyncService } from '../services/SicrediSyncService';


/**
 * Script para iniciar a sincroniza√ß√£o autom√°tica da SICREDI
 * Este script deve ser executado quando o servidor iniciar
 */
export async function startSicrediSync(): Promise<void> {
  try {
    
    // Inicializar servi√ßos (eles usam RepositoryFactory internamente)
const paymentService = new PaymentService();
const userService = new UserService();
const legacyClientService = new LegacyClientService();
const orderService = new OrderService();

    // Inicializar servi√ßo de sincroniza√ß√£o
    const sicrediSyncService = new SicrediSyncService(
      paymentService,
      userService,
      legacyClientService,
      orderService
    );

    // Verificar se a sincroniza√ß√£o autom√°tica est√° habilitada
    const autoSyncEnabled = process.env.SICREDI_AUTO_SYNC === 'true';
    const syncInterval = parseInt(process.env.SICREDI_SYNC_INTERVAL || '30');

    if (autoSyncEnabled) {
      
      // Iniciar sincroniza√ß√£o autom√°tica
      sicrediSyncService.startAutoSync(syncInterval);
      
      // Executar primeira sincroniza√ß√£o ap√≥s 1 minuto
      setTimeout(async () => {
        try {
          await sicrediSyncService.performSync();
        } catch (error) {
          console.error('‚ùå SICREDI: Erro na primeira sincroniza√ß√£o:', error);
        }
      }, 60000); // 1 minuto
      
    } else {
    }

  } catch (error) {
    console.error('‚ùå Erro ao iniciar sincroniza√ß√£o da SICREDI:', error);
  }
}

/**
 * Fun√ß√£o para parar a sincroniza√ß√£o (√∫til para testes)
 */
export function stopSicrediSync(): void {
  // Esta fun√ß√£o seria implementada se mantivermos uma refer√™ncia global ao servi√ßo
  console.log('üõë SICREDI: Parando sincroniza√ß√£o autom√°tica...');
}

// Se este arquivo for executado diretamente
if (require.main === module) {
  startSicrediSync()
    .then(() => {
      console.log('‚úÖ Script de sincroniza√ß√£o SICREDI executado com sucesso');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erro ao executar script de sincroniza√ß√£o SICREDI:', error);
      process.exit(1);
    });
}
